on:
  workflow_call:
    inputs:
      app:
        required: true
        type: string
      naisPath:
        required: false
        type: string
        default: .nais/

permissions:
  actions: read
  contents: read
  security-events: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
            ${{ runner.os }}-

      - name: Build
        run: ./gradlew build

      - name: Upload build outputs
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: build
          retention-days: 7

  build-docker:
    if: github.actor != 'dependabot[bot]'
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      id-token: write
    outputs:
      image: ${{ steps.docker-build-push.outputs.image }}
    steps:
      - uses: actions/checkout@v4
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: build
          path: build
      - name: Push docker image to GAR
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: tsm
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

  deploy-dev:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: ${{ inputs.naisPath }}nais-dev.yaml
          VAR: image=${{ needs.build-docker.outputs.image }}


  deploy-prod:
    runs-on: ubuntu-latest
    needs: build-docker
    if: github.ref_name == 'main'
    steps:
      - uses: actions/checkout@v4
      - uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: prod-gcp
          RESOURCE: ${{ inputs.naisPath }}nais-prod.yaml
          VAR: image=${{ needs.build-docker.outputs.image }}

  trivy-docker:
    name: Trivy
    permissions:
      id-token: write
      security-events: write
    needs: build-docker
    uses: navikt/teamsykmelding-github-actions-workflows/.github/workflows/trivy-docker.yml@main
    with:
      image: ${{ needs.build-docker.outputs.image }}
      team: tsm
    secrets: inherit


  analyze:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Java 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: kotlin

      - name: Build
        run: ./gradlew build -x test

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
